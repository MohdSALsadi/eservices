@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var departments = (List<Department>)ViewBag.Departments;
    var user = (System.Security.Claims.ClaimsIdentity)User.Identity;
    var isAdmin = user.Claims.Any(c => c.Type == System.Security.Claims.ClaimTypes.Role && (c.Value == "Admin" || c.Value == "Manager"));
    var isManager = user.Claims.Any(c => c.Type == System.Security.Claims.ClaimTypes.Role && (c.Value == "Manager"));
    var departmentId = user.Claims.FirstOrDefault(c => c.Type == "DepartmentId")?.Value;

}

<div class="content-overlay"></div>




<div class="card">
    <div class="card-header">
        <h4 class="card-title">Search Criteria</h4>
        <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
        <div class="heading-elements">
            <ul class="list-inline mb-0">
                <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                <li><a data-action="close"><i class="ft-x"></i></a></li>
            </ul>
        </div>
    </div>
    <div class="card-content collapse show">
        <div class="card-body card-dashboard">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-4 label-control" for="ReferenceNumber">Reference Number:</label>
                        <div class="col-md-8">
                            <input type="text" id="txtReferenceNumber" class="form-control" placeholder="Reference Number" name="ReferenceNumber">
                        </div>
                    </div>

                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-4 label-control" for="Subject">Subject:</label>
                        <div class="col-md-8">
                            <input type="text" id="txtSubject" class="form-control" placeholder="Subject" name="Subject">
                        </div>
                    </div>

                </div>


                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-4 label-control" for="ddlStatus">Status:</label>
                        <div class="col-md-8">
                            <select class="form-control" id="ddlStatus" name="ddlStatus">
                                <option value="">ALL</option>
                                <option value="APPROVED">APPROVED</option>
                                <option value="REJECTED">REJECTED</option>
                                <option value="NEW">NEW</option>
                                <option value="PENDING">PENDING</option>
                                <option value="IN_PROGRESS">IN_PROGRESS</option>
                            </select>
                        </div>
                    </div>

                </div>



                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-4 label-control" for="Originator">Originator:</label>
                        <div class="col-md-8">
                            <input type="text" id="txtOriginator" class="form-control" placeholder="Originator" name="Originator">
                        </div>
                    </div>

                </div>


                <div class="col-md-6">

                    <a id="btnSearch" class="btn btn-md  btn-primary ml-50 mb-50 mb-sm-0 cursor-pointer" href="#next" role="menuitem">Search</a>
                    <a id="btnClear" class="btn btn-md  btn-danger ml-50 mb-50 mb-sm-0 cursor-pointer" href="#next" role="menuitem">Clear</a>

                </div>

            </div>

        </div>
    </div>
</div>





<section id="pagination">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Requests</h4>
                    <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                            <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                            <li><a data-action="close"><i class="ft-x"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-content collapse show">
                    <div class="card-body card-dashboard">

                        <div class="table-responsive">

                            <a href="@Url.Action("create","request")" class="btn btn-md  btn-success ml-50 mb-50 mb-sm-0 cursor-pointer" fdprocessedid="m1kxx4">
                                <i class="ft-plus"></i>
                                Add New Request
                            </a>
                            <br /><br />
                            <table id="requests" class="table table-striped table-bordered">
                                <thead>
                                    <tr>

                                        <th>ReferenceNumber</th>
                                        <th>Subject</th>
                                        <th>Establishment</th>
                                        <th>Originator</th>
                                        <th>CreatedOn</th>
                                        <th>CreatedBy</th>
                                        <th>Status</th>

                                        <th></th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<div class="modal fade text-left" id="forwardDepartmentModal" tabindex="-1" role="dialog" aria-labelledby="assignDepartmentModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width:111%;">
            <div class="modal-header bg-info white">
                <h4 class="modal-title white" id="modal-fwd-department-modal">Assign Department</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <fieldset class="form-group position-relative has-icon-left mb-1">
                    @foreach (var item in departments)
                    {
                        <input type="radio" name="department" value="@item.Id" />
                        @item.Name
                        <br />
                    }
                </fieldset>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-fwd-department" class="btn btn-outline-info">Save</button>
                <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script>



        $(document).ready(function () {

            loadRequests();

            $('#btnClear').click(function (e) {
                debugger;
                e.preventDefault();
                $('#txtReferenceNumber,#txtSubject').val('');
                loadRequests(null, null, null, null);
            });

            $('#btnSearch').click(function () {
                var referenceNumber = $('#txtReferenceNumber').val().trimEnd();
                var subject = $('#txtSubject').val().trimEnd();
                var status = $('#ddlStatus').val().trimEnd();
                var originator = $('#txtOriginator').val().trimEnd();
                loadRequests(referenceNumber, subject, status, originator);

            });

        });

        function formatRequestStatus(status) {
            switch (status) {
                case "NEW":
                    return '<p class="badge badge-success">NEW</p>';
                case "IN_PROGRESS":
                    return '<p class="badge badge-primary">IN_PROGRESS</p>';
                case "PENDING":
                    return '<p class="badge badge-warning">PENDING</p>';
                case "COMPLETED":
                    return '<p class="badge badge-success">COMPLETED</p>';
                case "APPROVED":
                    return '<p class="badge badge-success">APPROVED</p>';
                case "REJECTED":
                    return '<p class="badge badge-danger">REJECTED</p>';
                default:
                    return '';
            }
        }

        function details(id) {
            window.location.href = '@Url.Action("details", "request")?id=' + id;
        }


        function checkout(id) {
            if (confirm('are you sure you want to checkout this request')) {

                $.ajax({
                    url: "@Url.Action("Checkout")",
                    method: "GET",
                    data: { requestId: id },
                    dataType: "json",
                    success: function (data) {
                        if (data.isSuccess) {
                            toastr.success("Operation executed successfully.");
                            $('#requests').DataTable().ajax.reload();
                        }
                        else
                            toastr.error(result.message);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error checkout request:', error);
                    }
                });

            }
        }


        function fwdToDepartment(id, referenceNumber) {

            $("input[name='department']").prop('checked', false);
            $('#modal-fwd-department-modal').html('Send to department | Request with reference number: ' + referenceNumber);
            $('#btn-fwd-department').attr("onclick", 'sendToDepartment(' + id + ')');
            $('#forwardDepartmentModal').modal('show');
        }
        function sendToDepartment(id) {
            debugger;
            var departmentId = $("input[name='department']:checked").val();
            var requestId = id;

            $.ajax({
                url: "@Url.Action("SendToDepartment", "request")",
                method: "GET",
                data: { requestId: requestId, departmentId: departmentId },
                dataType: "json",
                success: function (result) {
                    if (result.isSuccess > 0) {
                        toastr.success("Operation executed successfully.");
                        $('#forwardDepartmentModal').modal('hide');
                        loadRequests(null, null, null, null);
                    } else {
                        toastr.error(result.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle error case
                    console.error(xhr.responseText);
                }
            });
        }


        function release(id) {
            $.ajax({
                url: "@Url.Action("release", "request")",
                method: "GET",
                data: { requestId: id },
                dataType: "json",
                success: function (result) {
                    if (result.isSuccess > 0) {
                        toastr.success("Operation executed successfully.");
                        loadRequests(null, null, null, null);
                    } else {
                        toastr.error(result.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        function deleteRequest(id, referenceNUmber) {
            if (confirm(`Are you sure you want to delete this request with reference number :${referenceNUmber}`)) {
                $.ajax({
                    url: "@Url.Action("delete", "request")",
                    method: "GET",
                    data: { requestId: id },
                    dataType: "json",
                    success: function (result) {
                        if (result.isSuccess > 0) {
                            toastr.success("Operation executed successfully.");
                            loadRequests(null, null, null, null);
                        } else {
                            toastr.error(result.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }

        }

        function print(referenceNumber) {
            var url = '@Url.Action("Print", "Report")';
            url += '?referenceNumber=' + referenceNumber;
            // Redirect to the URL
            window.location.href = url;
        }

        function loadRequests(referenceNumber, subject, status, originator) {


            $('#requests').DataTable({
                "paging": true,
                "pageLength": 10,
                "searching": false,
                "processing": true,
                "serverSide": true,
                "destroy": true,
                "ajax": {
                    "url": "@Url.Action("GetRequests", "Request")",
                    "type": "POST",
                    "data": {
                        "ReferenceNumber": referenceNumber,
                        "Subject": subject,
                        "Status": status,
                        "Originator": originator
                    }

                },

                "columns": [
                    { "data": "referenceNumber", width: '20%' },
                    {
                        "data": "subject",
                        "width": '20%',
                        "render": function (data) {
                            if (data.length > 50) {
                                return data.substring(0, 50) + '...';
                            } else {
                                return data;
                            }
                        }
                    },
                    { "data": "establishment", width: '17%' },
                    { "data": "originator", width: '17%' },
                    {
                        "data": "createdOn",
                        "width": '7%',
                        "render": function (data) {
                            var date = new Date(data);
                            var formattedDate = formatDate(date);
                            return formattedDate;
                        }
                    },
                    { "data": "createdBy", width: '7%' },
                    {
                        "width": '7%',
                        "data": null,
                        "render": function (data, type, row) {
                            return formatRequestStatus(`${row.status}`);
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            debugger;
                            const checkoutButton = ((row.checkoutByUserId != null || ('@isAdmin' == 'True' && '@isManager' == 'False') || '@departmentId' != row.departmentId) || (row.status == 'IN_PROGRESS' || row.status == 'NEW' || row.status == 'APPROVED' || row.status == 'REJECTED')) ? '' : `<a class="dropdown-item" onclick="checkout(${row.id})">Checkout</a>`;
                            const releaseButton = (row.checkoutByUserId != null && row.status != 'IN_PROGRESS' && row.status != 'REJECTED' && row.status != 'APPROVED') ? `<a class="dropdown-item" onclick="release(${row.id})">Release</a>` : '';
                            const deleteButton = `<a class="dropdown-item" onclick="deleteRequest(${row.id},'${row.referenceNumber}')">Delete</a>`;


                            const sendToDepartmentButton = (row.status == 'APPROVED' || row.status == 'REJECTED' || row.status == 'PENDING') ? '' : `<a class="dropdown-item" onclick="fwdToDepartment(${row.id},'${row.referenceNumber}')">Send To Department</a>`;

                            if ('@isAdmin' == 'True') {

                                return `
                                                                <div class="dropdown">
                                                                    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                        options
                                                                    </button>
                                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                                        <a class="dropdown-item" onclick="details(${row.id})">Details</a>
                                                                                   <a class="dropdown-item" onclick="print('${row.referenceNumber}')">Print</a>
                                                                                        ${sendToDepartmentButton}
                                                                        ${checkoutButton}
                                                                        ${releaseButton}
                                                                        ${deleteButton}
                                                                    </div>
                                                                        </div>`;
                            }
                            else {
                                return `
                                                                        <div class="dropdown">
                                                                            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                                options
                                                                            </button>
                                                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                                                <a class="dropdown-item" onclick="details(${row.id})">Details</a>
                                                                                ${checkoutButton}
                                                                            </div>
                                                                                </div>`;
                            }



                        }
                    }

                ]
            });
        }
        function formatDate(date) {
            var options = {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                hour12: true
            };
            return date.toLocaleString('en-US', options);
        }

    </script>
}
